version: '3.3'
services:
  api:
    build: docker
    volumes:
      - ./src:/var/www
    working_dir: /var/www
    environment:
      MYSQL_DSN: 'host=db;dbname=api-skeleton;charset=utf8mb4'
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DB: api-skeleton
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_LOCAL_PATH: ${STORAGE_LOCAL_PATH}
      STORAGE_LOCAL_URL: ${STORAGE_LOCAL_URL}
      STORAGE_S3_BUCKET_NAME: ${STORAGE_S3_BUCKET_NAME}
      STORAGE_S3_BUCKET_ID: ${STORAGE_S3_BUCKET_ID}
      STORAGE_S3_KEY_ID: ${STORAGE_S3_KEY_ID}
      STORAGE_S3_KEY_SECRET: ${STORAGE_S3_KEY_SECRET}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
    ports:
      - 8200:80
    depends_on:
      memcached:
        condition: service_started
      db:
        condition: service_healthy

  memcached:
    image: memcached

  db:
    image: mysql:8.4
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-volume:/var/lib/mysql
      - ./src/mysql-migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "33060:3306"
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute "SHOW DATABASES;"
      retries: 20
      interval: 2s


  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8201:80

volumes:
  db-volume:
